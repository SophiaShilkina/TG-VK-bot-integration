from aiogram import F
from msg import write_msg, write_msg_with_photo
from botsinit import bot, dp
from updates import *

from aiogram import Router
from keyboards import *
from aiogram.types import CallbackQuery
import asyncio


async def main_bot():
    dp.include_router(router)
    await callback_operations()
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())


async def callback_operations():
    await send_message_to_user(f"<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –±–æ—Ç–∞</b>\n\n",
                               keyboard_tg)

router = Router()

message_mistake = ""
flags = {
    'userAct1': False,
    'flag': False,
    'flag2': False,
    'flag3': False,
    'flag4': False,
    'flag5': False,
    'user_message_received': False,
}


@router.callback_query(F.data == 'yes')
async def yes(callback: CallbackQuery):
    await callback.message.answer(f'–ü—Ä–∏–Ω—è—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è—é\n\n<a href="https://vk.com/gim226206756?sel'
                         f'=">–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –≤ —á–∞—Ç</a>')


@router.callback_query(F.data == 'rooms')
async def rooms(callback: CallbackQuery, idu):
    await callback.message.answer('–ü—Ä–∏–Ω—è—Ç–æ, –ø—Ä–æ—à—É –≥–æ—Å—Ç—è –ø–æ–º–µ–Ω—è—Ç—å –∫–æ–º–Ω–∞—Ç—É')
    await mistake_user_room(idu)
    flags['flag'] = True
    if flags['flag']:
        await write_msg(idu, '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ! –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ '
                             '–ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏—è. –û—Ç–ø—Ä–∞–≤–∏–ª –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–≥–∞–º.')
        await update_user_message(idu)
        flags['flag'] = False


@router.callback_query(F.data == 'what')
async def what(callback: CallbackQuery):
    await callback.message.answer(f"{message_1}\n\n–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –∏–ª–∏ –ø—É–Ω–∫—Ç—ã, –≤ \n–∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –æ—à–∏–±–∫–∞",
                                  keyboard_tg1)


@router.callback_query(F.data == '2')
async def mistake2(callback: CallbackQuery):
    message_mistake += '‚ùó–¥–∞—Ç—ã'
    flags['flag2'] = True
    await callback.message.answer('2 –ø—É–Ω–∫—Ç')


@router.callback_query(F.data == '3')
async def mistake3(callback: CallbackQuery):
    message_mistake += '‚ùó—á–∏—Å–ª–æ —á–µ–ª–æ–≤–µ–∫'
    flags['flag3'] = True
    await callback.message.answer('3 –ø—É–Ω–∫—Ç')


@router.callback_query(F.data == '4')
async def mistake4(callback: CallbackQuery):
    message_mistake += '‚ùóc–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫'
    flags['flag4'] = True
    await callback.message.answer('4 –ø—É–Ω–∫—Ç')


@router.callback_query(F.data == '5')
async def mistake5(callback: CallbackQuery):
    message_mistake += '‚ùó–∫–æ–º–Ω–∞—Ç—ã'
    flags['flag5'] = True
    await callback.message.answer('5 –ø—É–Ω–∫—Ç')


@router.callback_query(F.data == 'allFail')
async def allFail(callback: CallbackQuery):
    await write_msg(idu, f'–û–ø–µ—Ä–∞—Ç–æ—Ä –Ω–∞—à–µ–ª –æ—à–∏–±–∫—É/–Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–∫—É –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –í–∞–º–∏ —Ñ–æ—Ä–º–µ, '
                    f'–æ–Ω –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –≤ –¥–∏–∞–ª–æ–≥ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏,'
                    f' –æ–∂–∏–¥–∞–π—Ç–µ ‚è∞')
    await callback.message.answer(f'–ü—Ä–∏–Ω—è—Ç–æ, –æ–±—ä—è—Å–Ω—è—é –¥–æ–ª–±–æ–µ–±—É —á—Ç–æ –æ–Ω —Å–æ–≤—Å–µ–º –¥–æ–ª–±–æ–µ–±\n\n'
                         f'<a href="https://vk.com/gim226206756?sel={idu}">–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –≤ '
                         f'—á–∞—Ç</a>')


@router.callback_query(F.data == 'ready')
async def ready(callback: CallbackQuery):

    await write_msg(idu, f'üôÄ –û–ø–µ—Ä–∞—Ç–æ—Ä –Ω–∞—à–µ–ª –æ—à–∏–±–∫—É/–Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–∫—É –≤ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –í–∞–º–∏ —Ñ–æ—Ä–º–µ, '
                    f'–Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–∑–∏—Ü–∏—è—Ö: \n\n{message_mistake}‚ùó\n\n–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–µ—Ç–∫–æ '
                    f'—Å–ª–µ–¥—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–∏—è–º –±–æ—Ç–∞ –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —Ñ–æ—Ä–º—ã.\n\n–ü—Ä–æ—Å–∏–º –í–∞—Å –Ω–∞—á–∞—Ç—å '
                    f'–æ–±—Ä–∞—â–∞—Ç—å –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–∫–ª—é—á–µ–Ω–∞ –≤ ‚ùó‚ùó –∏ '
                    f'–∑–∞–ø–æ–ª–Ω–∏—Ç—å –æ–±–æ–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ ‚úè')
    await callback.message.answer('–ü—Ä–∏–Ω—è—Ç–æ, –ø–æ–º–∏–Ω—É—Ç–Ω–æ –æ–±—ä—è—Å–Ω—è—é –¥–æ–ª–±–æ–µ–±—É, –≥–¥–µ –æ–Ω –¥–æ–ª–±–æ–µ–±')
    if flags['flag2']:
        await write_msg(idu, 'üìÜ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞ –∏ –≤—ã–µ–∑–¥–∞, '
                       '—Å–æ–±–ª—é–¥–∞—è –¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:\n\n‚ùó–¥–¥.–º–º.–≥–≥ ‚Äì –¥–¥.–º–º.–≥–≥‚ùó')
        await update_user_data(idu)
        flags['flag2'] = False
    if flags['flag3']:
        await write_msg(idu,
                  'üëî –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –∑–∞–µ—Ö–∞—Ç—å.\n\n‚ùó–ù–µ–æ–±—Ö–æ–¥–∏–º–æ '
                  '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É‚ùó')
        await update_user_persons(idu)
        flags['flag3'] = False
    if flags['flag4']:
        await write_msg(idu,
                  'üë´ –í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω–æ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ, —Å–æ–±–ª—é–¥–∞—è –¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É—è '
                  '—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞:\n\n‚ùó–ß–∏—Å–ª–æ –º—É–∂—á–∏–Ω / —á–∏—Å–ª–æ –∂–µ–Ω—â–∏–Ω‚ùó')
        await update_user_gender(idu)
        flags['flag4'] = False
    if flags['flag5']:
        await write_msg_with_photo(idu, 'üè° –í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É (–≤–µ—Ä–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã), –≤ '
                                    '–∫–æ—Ç–æ—Ä–æ–π –í—ã –±—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –ø—Ä–æ–∂–∏–≤–∞—Ç—å –≤ –Ω–∞—à–µ–º —Ö–æ—Å—Ç–µ–ª–µ.'
                                    '\n\n–£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, ‚ùó–∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤ —Å–ø–∏—Å–∫–µ, '
                                    '–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤ (Caps Lock)‚ùó')
        await update_user_room(idu)
        flags['flag5'] = False
    if not (flags['flag2'] and flags['flag3'] and flags['flag4'] and flags['flag5']):
        await write_msg(idu,
                  '–û—Ç–ø—Ä–∞–≤–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–≤–æ–∏–º –∫–æ–ª–ª–µ–≥–∞–º, –æ–∂–∏–¥–∞–π—Ç–µ ‚è∞')
        await update_user_message(idu)
        message_mistake = ""


@router.callback_query(F.data == 'no')
async def no(callback: CallbackQuery):
    await write_msg(idu, '–ë–ª–∞–≥–æ–¥–∞—Ä—é –≤–∞—Å –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –Ω–∞–º. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –¥–æ–ª–∂–µ–Ω —Å–æ–æ–±—â–∏—Ç—å'
                  ' –≤–∞–º, —á—Ç–æ –Ω–∞ –¥–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏, —É –Ω–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç –Ω–∏ '
                  '–≤ –æ–¥–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ.\n\n–ï—Å–ª–∏ –≤—ã –≥–æ—Ç–æ–≤—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –¥–∞—Ç—ã –≤–∞—à–µ–≥–æ '
                  '–≤–∏–∑–∏—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –º–Ω–µ –æ–± —ç—Ç–æ–º, –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞–∂–∞–≤ ¬´–ù–∞—á–∞—Ç—å¬ª –∏ '
                  '–æ—Å—Ç–∞–≤–∏–≤ –∑–∞—è–≤–∫—É —Å–Ω–æ–≤–∞, –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –ø–æ–∑–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –Ω–∞–∂–∞–≤ '
                  '¬´–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞¬ª, —á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å —Å –Ω–∏–º –≤–æ–ø—Ä–æ—Å—ã –∑–∞—Å–µ–ª–µ–Ω–∏—è, –∏ –º—ã —Å '
                  '—Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–∂–µ–º –≤–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ.\n\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n–í–∞—à '
                  '–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —á–∞—Ç-–±–æ—Ç',
                  keyboard3)
    await callback.message.answer('–ü—Ä–∏–Ω—è—Ç–æ, –æ—Ç–∫–∞–∑')